-- [1]9:create database ALTER
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'ALTER'. Expecting: 'IF', <identifier>
}
-- [1]11:create database db.ALTER
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]13:create database test
STRICT{
PASS
}
-- [1]15:show databases
STRICT{
PASS
}
-- [1]19:use test
STRICT{
PASS
}
-- [1]25:create table ALTER  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'ALTER'. Expecting: 'IF', <identifier>
}
-- [1]34:create table table_01  ( 	ALTER STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ALTER'. Expecting: ')', <identifier>
}
-- [1]40:create table table_02 (     ALTER STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'ALTER'. Expecting: ')', <identifier>
}
-- [1]46:create table table_03  ( 	ALTER INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ALTER'. Expecting: ')', <identifier>
}

-- [1]50:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.14
-- [1]53:drop database test
STRICT{
PASS
}
-- [1]58:create database AND
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'AND'. Expecting: 'IF', <identifier>
}
-- [1]60:create database db.AND
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]62:create database test
STRICT{
PASS
}
-- [1]64:show databases
STRICT{
PASS
}
-- [1]68:use test
STRICT{
PASS
}
-- [1]74:create table AND  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'AND'. Expecting: 'IF', <identifier>
}
-- [1]83:create table table_01  ( 	AND STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'AND'. Expecting: ')', <identifier>
}
-- [1]89:create table table_02 (     AND STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'AND'. Expecting: ')', <identifier>
}
-- [1]95:create table table_03  ( 	AND INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'AND'. Expecting: ')', <identifier>
}

-- [1]99:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]102:drop database test
STRICT{
PASS
}
-- [1]107:create database AS
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'AS'. Expecting: 'IF', <identifier>
}
-- [1]109:create database db.AS
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]111:create database test
STRICT{
PASS
}
-- [1]113:show databases
STRICT{
PASS
}
-- [1]117:use test
STRICT{
PASS
}
-- [1]123:create table AS  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'AS'. Expecting: 'IF', <identifier>
}
-- [1]132:create table table_01  ( 	AS STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'AS'. Expecting: ')', <identifier>
}
-- [1]138:create table table_02 (     AS STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'AS'. Expecting: ')', <identifier>
}
-- [1]144:create table table_03  ( 	AS INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'AS'. Expecting: ')', <identifier>
}

-- [1]148:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]151:drop database test
STRICT{
PASS
}
-- [1]156:create database BETWEEN
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'BETWEEN'. Expecting: 'IF', <identifier>
}
-- [1]158:create database db.BETWEEN
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]160:create database test
STRICT{
PASS
}
-- [1]162:show databases
STRICT{
PASS
}
-- [1]166:use test
STRICT{
PASS
}
-- [1]172:create table BETWEEN  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'BETWEEN'. Expecting: 'IF', <identifier>
}
-- [1]181:create table table_01  ( 	BETWEEN STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'BETWEEN'. Expecting: ')', <identifier>
}
-- [1]187:create table table_02 (     BETWEEN STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'BETWEEN'. Expecting: ')', <identifier>
}
-- [1]193:create table table_03  ( 	BETWEEN INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'BETWEEN'. Expecting: ')', <identifier>
}

-- [1]197:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.3
-- [1]200:drop database test
STRICT{
PASS
}
-- [1]205:create database BY
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'BY'. Expecting: 'IF', <identifier>
}
-- [1]207:create database db.BY
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]209:create database test
STRICT{
PASS
}
-- [1]211:show databases
STRICT{
PASS
}
-- [1]215:use test
STRICT{
PASS
}
-- [1]221:create table BY  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'BY'. Expecting: 'IF', <identifier>
}
-- [1]230:create table table_01  ( 	BY STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'BY'. Expecting: ')', <identifier>
}
-- [1]236:create table table_02 (     BY STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'BY'. Expecting: ')', <identifier>
}
-- [1]242:create table table_03  ( 	BY INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'BY'. Expecting: ')', <identifier>
}

-- [1]246:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.3
-- [1]249:drop database test
STRICT{
PASS
}
-- [1]254:create database CASE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CASE'. Expecting: 'IF', <identifier>
}
-- [1]256:create database db.CASE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]258:create database test
STRICT{
PASS
}
-- [1]260:show databases
STRICT{
PASS
}
-- [1]264:use test
STRICT{
PASS
}
-- [1]270:create table CASE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CASE'. Expecting: 'IF', <identifier>
}
-- [1]279:create table table_01  ( 	CASE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CASE'. Expecting: ')', <identifier>
}
-- [1]285:create table table_02 (     CASE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CASE'. Expecting: ')', <identifier>
}
-- [1]291:create table table_03  ( 	CASE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CASE'. Expecting: ')', <identifier>
}

-- [1]295:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]298:drop database test
STRICT{
PASS
}
-- [1]303:create database CAST
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CAST'. Expecting: 'IF', <identifier>
}
-- [1]305:create database db.CAST
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]307:create database test
STRICT{
PASS
}
-- [1]309:show databases
STRICT{
PASS
}
-- [1]313:use test
STRICT{
PASS
}
-- [1]319:create table CAST  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CAST'. Expecting: 'IF', <identifier>
}
-- [1]328:create table table_01  ( 	CAST STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CAST'. Expecting: ')', <identifier>
}
-- [1]334:create table table_02 (     CAST STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CAST'. Expecting: ')', <identifier>
}
-- [1]340:create table table_03  ( 	CAST INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CAST'. Expecting: ')', <identifier>
}

-- [1]344:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]347:drop database test
STRICT{
PASS
}
-- [1]352:create database CONSTRAINT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CONSTRAINT'. Expecting: 'IF', <identifier>
}
-- [1]354:create database db.CONSTRAINT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]356:create database test
STRICT{
PASS
}
-- [1]358:show databases
STRICT{
PASS
}
-- [1]362:use test
STRICT{
PASS
}
-- [1]368:create table CONSTRAINT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CONSTRAINT'. Expecting: 'IF', <identifier>
}
-- [1]377:create table table_01  ( 	CONSTRAINT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CONSTRAINT'. Expecting: ')', <identifier>
}
-- [1]383:create table table_02 (     CONSTRAINT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CONSTRAINT'. Expecting: ')', <identifier>
}
-- [1]389:create table table_03  ( 	CONSTRAINT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CONSTRAINT'. Expecting: ')', <identifier>
}

-- [1]393:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]396:drop database test
STRICT{
PASS
}
-- [1]401:create database CREATE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CREATE'. Expecting: 'IF', <identifier>
}
-- [1]403:create database db.CREATE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]405:create database test
STRICT{
PASS
}
-- [1]407:show databases
STRICT{
PASS
}
-- [1]411:use test
STRICT{
PASS
}
-- [1]417:create table CREATE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CREATE'. Expecting: 'IF', <identifier>
}
-- [1]426:create table table_01  ( 	CREATE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CREATE'. Expecting: ')', <identifier>
}
-- [1]432:create table table_02 (     CREATE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CREATE'. Expecting: ')', <identifier>
}
-- [1]438:create table table_03  ( 	CREATE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CREATE'. Expecting: ')', <identifier>
}

-- [1]442:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]445:drop database test
STRICT{
PASS
}
-- [1]450:create database CROSS
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CROSS'. Expecting: 'IF', <identifier>
}
-- [1]452:create database db.CROSS
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]454:create database test
STRICT{
PASS
}
-- [1]456:show databases
STRICT{
PASS
}
-- [1]460:use test
STRICT{
PASS
}
-- [1]466:create table CROSS  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CROSS'. Expecting: 'IF', <identifier>
}
-- [1]475:create table table_01  ( 	CROSS STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CROSS'. Expecting: ')', <identifier>
}
-- [1]481:create table table_02 (     CROSS STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CROSS'. Expecting: ')', <identifier>
}
-- [1]487:create table table_03  ( 	CROSS INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CROSS'. Expecting: ')', <identifier>
}

-- [1]491:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]494:drop database test
STRICT{
PASS
}
-- [1]499:create database CUBE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CUBE'. Expecting: 'IF', <identifier>
}
-- [1]501:create database db.CUBE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]503:create database test
STRICT{
PASS
}
-- [1]505:show databases
STRICT{
PASS
}
-- [1]509:use test
STRICT{
PASS
}
-- [1]515:create table CUBE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CUBE'. Expecting: 'IF', <identifier>
}
-- [1]524:create table table_01  ( 	CUBE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CUBE'. Expecting: ')', <identifier>
}
-- [1]530:create table table_02 (     CUBE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CUBE'. Expecting: ')', <identifier>
}
-- [1]536:create table table_03  ( 	CUBE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CUBE'. Expecting: ')', <identifier>
}

-- [1]540:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]543:drop database test
STRICT{
PASS
}
-- [1]548:create database CURRENT_CATALOG
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CURRENT_CATALOG'. Expecting: 'IF', <identifier>
}
-- [1]550:create database db.CURRENT_CATALOG
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]552:create database test
STRICT{
PASS
}
-- [1]554:show databases
STRICT{
PASS
}
-- [1]558:use test
STRICT{
PASS
}
-- [1]564:create table CURRENT_CATALOG  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CURRENT_CATALOG'. Expecting: 'IF', <identifier>
}
-- [1]573:create table table_01  ( 	CURRENT_CATALOG STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_CATALOG'. Expecting: ')', <identifier>
}
-- [1]579:create table table_02 (     CURRENT_CATALOG STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CURRENT_CATALOG'. Expecting: ')', <identifier>
}
-- [1]585:create table table_03  ( 	CURRENT_CATALOG INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_CATALOG'. Expecting: ')', <identifier>
}

-- [1]589:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]592:drop database test
STRICT{
PASS
}
-- [1]597:create database CURRENT_DATE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CURRENT_DATE'. Expecting: 'IF', <identifier>
}
-- [1]599:create database db.CURRENT_DATE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]601:create database test
STRICT{
PASS
}
-- [1]603:show databases
STRICT{
PASS
}
-- [1]607:use test
STRICT{
PASS
}
-- [1]613:create table CURRENT_DATE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CURRENT_DATE'. Expecting: 'IF', <identifier>
}
-- [1]622:create table table_01  ( 	CURRENT_DATE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_DATE'. Expecting: ')', <identifier>
}
-- [1]628:create table table_02 (     CURRENT_DATE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CURRENT_DATE'. Expecting: ')', <identifier>
}
-- [1]634:create table table_03  ( 	CURRENT_DATE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_DATE'. Expecting: ')', <identifier>
}

-- [1]638:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]641:drop database test
STRICT{
PASS
}
-- [1]646:create database CURRENT_PATH
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CURRENT_PATH'. Expecting: 'IF', <identifier>
}
-- [1]648:create database db.CURRENT_PATH
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]650:create database test
STRICT{
PASS
}
-- [1]652:show databases
STRICT{
PASS
}
-- [1]656:use test
STRICT{
PASS
}
-- [1]662:create table CURRENT_PATH  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CURRENT_PATH'. Expecting: 'IF', <identifier>
}
-- [1]671:create table table_01  ( 	CURRENT_PATH STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_PATH'. Expecting: ')', <identifier>
}
-- [1]677:create table table_02 (     CURRENT_PATH STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CURRENT_PATH'. Expecting: ')', <identifier>
}
-- [1]683:create table table_03  ( 	CURRENT_PATH INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_PATH'. Expecting: ')', <identifier>
}

-- [1]687:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]690:drop database test
STRICT{
PASS
}
-- [1]695:create database CURRENT_ROLE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CURRENT_ROLE'. Expecting: 'IF', <identifier>
}
-- [1]697:create database db.CURRENT_ROLE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]699:create database test
STRICT{
PASS
}
-- [1]701:show databases
STRICT{
PASS
}
-- [1]705:use test
STRICT{
PASS
}
-- [1]711:create table CURRENT_ROLE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CURRENT_ROLE'. Expecting: 'IF', <identifier>
}
-- [1]720:create table table_01  ( 	CURRENT_ROLE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_ROLE'. Expecting: ')', <identifier>
}
-- [1]726:create table table_02 (     CURRENT_ROLE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CURRENT_ROLE'. Expecting: ')', <identifier>
}
-- [1]732:create table table_03  ( 	CURRENT_ROLE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_ROLE'. Expecting: ')', <identifier>
}

-- [1]736:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]739:drop database test
STRICT{
PASS
}
-- [1]744:create database CURRENT_SCHEMA
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CURRENT_SCHEMA'. Expecting: 'IF', <identifier>
}
-- [1]746:create database db.CURRENT_SCHEMA
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]748:create database test
STRICT{
PASS
}
-- [1]750:show databases
STRICT{
PASS
}
-- [1]754:use test
STRICT{
PASS
}
-- [1]760:create table CURRENT_SCHEMA  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CURRENT_SCHEMA'. Expecting: 'IF', <identifier>
}
-- [1]769:create table table_01  ( 	CURRENT_SCHEMA STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_SCHEMA'. Expecting: ')', <identifier>
}
-- [1]775:create table table_02 (     CURRENT_SCHEMA STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CURRENT_SCHEMA'. Expecting: ')', <identifier>
}
-- [1]781:create table table_03  ( 	CURRENT_SCHEMA INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_SCHEMA'. Expecting: ')', <identifier>
}

-- [1]785:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.4
-- [1]788:drop database test
STRICT{
PASS
}
-- [1]793:create database CURRENT_TIME
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CURRENT_TIME'. Expecting: 'IF', <identifier>
}
-- [1]795:create database db.CURRENT_TIME
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]797:create database test
STRICT{
PASS
}
-- [1]799:show databases
STRICT{
PASS
}
-- [1]803:use test
STRICT{
PASS
}
-- [1]809:create table CURRENT_TIME  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CURRENT_TIME'. Expecting: 'IF', <identifier>
}
-- [1]818:create table table_01  ( 	CURRENT_TIME STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_TIME'. Expecting: ')', <identifier>
}
-- [1]824:create table table_02 (     CURRENT_TIME STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CURRENT_TIME'. Expecting: ')', <identifier>
}
-- [1]830:create table table_03  ( 	CURRENT_TIME INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_TIME'. Expecting: ')', <identifier>
}

-- [1]834:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]837:drop database test
STRICT{
PASS
}
-- [1]842:create database CURRENT_TIMESTAMP
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CURRENT_TIMESTAMP'. Expecting: 'IF', <identifier>
}
-- [1]844:create database db.CURRENT_TIMESTAMP
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]846:create database test
STRICT{
PASS
}
-- [1]848:show databases
STRICT{
PASS
}
-- [1]852:use test
STRICT{
PASS
}
-- [1]858:create table CURRENT_TIMESTAMP  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CURRENT_TIMESTAMP'. Expecting: 'IF', <identifier>
}
-- [1]867:create table table_01  ( 	CURRENT_TIMESTAMP STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_TIMESTAMP'. Expecting: ')', <identifier>
}
-- [1]873:create table table_02 (     CURRENT_TIMESTAMP STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CURRENT_TIMESTAMP'. Expecting: ')', <identifier>
}
-- [1]879:create table table_03  ( 	CURRENT_TIMESTAMP INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_TIMESTAMP'. Expecting: ')', <identifier>
}

-- [1]883:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]886:drop database test
STRICT{
PASS
}
-- [1]891:create database CURRENT_USER
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'CURRENT_USER'. Expecting: 'IF', <identifier>
}
-- [1]893:create database db.CURRENT_USER
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]895:create database test
STRICT{
PASS
}
-- [1]897:show databases
STRICT{
PASS
}
-- [1]901:use test
STRICT{
PASS
}
-- [1]907:create table CURRENT_USER  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'CURRENT_USER'. Expecting: 'IF', <identifier>
}
-- [1]916:create table table_01  ( 	CURRENT_USER STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_USER'. Expecting: ')', <identifier>
}
-- [1]922:create table table_02 (     CURRENT_USER STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'CURRENT_USER'. Expecting: ')', <identifier>
}
-- [1]928:create table table_03  ( 	CURRENT_USER INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'CURRENT_USER'. Expecting: ')', <identifier>
}

-- [1]932:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]935:drop database test
STRICT{
PASS
}
-- [1]940:create database DEALLOCATE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'DEALLOCATE'. Expecting: 'IF', <identifier>
}
-- [1]942:create database db.DEALLOCATE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]944:create database test
STRICT{
PASS
}
-- [1]946:show databases
STRICT{
PASS
}
-- [1]950:use test
STRICT{
PASS
}
-- [1]956:create table DEALLOCATE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'DEALLOCATE'. Expecting: 'IF', <identifier>
}
-- [1]965:create table table_01  ( 	DEALLOCATE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'DEALLOCATE'. Expecting: ')', <identifier>
}
-- [1]971:create table table_02 (     DEALLOCATE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'DEALLOCATE'. Expecting: ')', <identifier>
}
-- [1]977:create table table_03  ( 	DEALLOCATE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'DEALLOCATE'. Expecting: ')', <identifier>
}

-- [1]981:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]984:drop database test
STRICT{
PASS
}
-- [1]989:create database DELETE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'DELETE'. Expecting: 'IF', <identifier>
}
-- [1]991:create database db.DELETE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]993:create database test
STRICT{
PASS
}
-- [1]995:show databases
STRICT{
PASS
}
-- [1]999:use test
STRICT{
PASS
}
-- [1]1005:create table DELETE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'DELETE'. Expecting: 'IF', <identifier>
}
-- [1]1014:create table table_01  ( 	DELETE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'DELETE'. Expecting: ')', <identifier>
}
-- [1]1020:create table table_02 (     DELETE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'DELETE'. Expecting: ')', <identifier>
}
-- [1]1026:create table table_03  ( 	DELETE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'DELETE'. Expecting: ')', <identifier>
}

-- [1]1030:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1033:drop database test
STRICT{
PASS
}
-- [1]1038:create database DESCRIBE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'DESCRIBE'. Expecting: 'IF', <identifier>
}
-- [1]1040:create database db.DESCRIBE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1042:create database test
STRICT{
PASS
}
-- [1]1044:show databases
STRICT{
PASS
}
-- [1]1048:use test
STRICT{
PASS
}
-- [1]1054:create table DESCRIBE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'DESCRIBE'. Expecting: 'IF', <identifier>
}
-- [1]1063:create table table_01  ( 	DESCRIBE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'DESCRIBE'. Expecting: ')', <identifier>
}
-- [1]1069:create table table_02 (     DESCRIBE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'DESCRIBE'. Expecting: ')', <identifier>
}
-- [1]1075:create table table_03  ( 	DESCRIBE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'DESCRIBE'. Expecting: ')', <identifier>
}

-- [1]1079:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]1082:drop database test
STRICT{
PASS
}
-- [1]1087:create database DISTINCT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'DISTINCT'. Expecting: 'IF', <identifier>
}
-- [1]1089:create database db.DISTINCT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1091:create database test
STRICT{
PASS
}
-- [1]1093:show databases
STRICT{
PASS
}
-- [1]1097:use test
STRICT{
PASS
}
-- [1]1103:create table DISTINCT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'DISTINCT'. Expecting: 'IF', <identifier>
}
-- [1]1112:create table table_01  ( 	DISTINCT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'DISTINCT'. Expecting: ')', <identifier>
}
-- [1]1118:create table table_02 (     DISTINCT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'DISTINCT'. Expecting: ')', <identifier>
}
-- [1]1124:create table table_03  ( 	DISTINCT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'DISTINCT'. Expecting: ')', <identifier>
}

-- [1]1128:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.4
-- [1]1131:drop database test
STRICT{
PASS
}
-- [1]1136:create database DROP
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'DROP'. Expecting: 'IF', <identifier>
}
-- [1]1138:create database db.DROP
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1140:create database test
STRICT{
PASS
}
-- [1]1142:show databases
STRICT{
PASS
}
-- [1]1146:use test
STRICT{
PASS
}
-- [1]1152:create table DROP  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'DROP'. Expecting: 'IF', <identifier>
}
-- [1]1161:create table table_01  ( 	DROP STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'DROP'. Expecting: ')', <identifier>
}
-- [1]1167:create table table_02 (     DROP STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'DROP'. Expecting: ')', <identifier>
}
-- [1]1173:create table table_03  ( 	DROP INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'DROP'. Expecting: ')', <identifier>
}

-- [1]1177:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1180:drop database test
STRICT{
PASS
}
-- [1]1185:create database ELSE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'ELSE'. Expecting: 'IF', <identifier>
}
-- [1]1187:create database db.ELSE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1189:create database test
STRICT{
PASS
}
-- [1]1191:show databases
STRICT{
PASS
}
-- [1]1195:use test
STRICT{
PASS
}
-- [1]1201:create table ELSE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'ELSE'. Expecting: 'IF', <identifier>
}
-- [1]1210:create table table_01  ( 	ELSE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ELSE'. Expecting: ')', <identifier>
}
-- [1]1216:create table table_02 (     ELSE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'ELSE'. Expecting: ')', <identifier>
}
-- [1]1222:create table table_03  ( 	ELSE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ELSE'. Expecting: ')', <identifier>
}

-- [1]1226:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]1229:drop database test
STRICT{
PASS
}
-- [1]1234:create database END
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'END'. Expecting: 'IF', <identifier>
}
-- [1]1236:create database db.END
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1238:create database test
STRICT{
PASS
}
-- [1]1240:show databases
STRICT{
PASS
}
-- [1]1244:use test
STRICT{
PASS
}
-- [1]1250:create table END  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'END'. Expecting: 'IF', <identifier>
}
-- [1]1259:create table table_01  ( 	END STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'END'. Expecting: ')', <identifier>
}
-- [1]1265:create table table_02 (     END STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'END'. Expecting: ')', <identifier>
}
-- [1]1271:create table table_03  ( 	END INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'END'. Expecting: ')', <identifier>
}

-- [1]1275:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]1278:drop database test
STRICT{
PASS
}
-- [1]1283:create database ESCAPE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'ESCAPE'. Expecting: 'IF', <identifier>
}
-- [1]1285:create database db.ESCAPE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1287:create database test
STRICT{
PASS
}
-- [1]1289:show databases
STRICT{
PASS
}
-- [1]1293:use test
STRICT{
PASS
}
-- [1]1299:create table ESCAPE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'ESCAPE'. Expecting: 'IF', <identifier>
}
-- [1]1308:create table table_01  ( 	ESCAPE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ESCAPE'. Expecting: ')', <identifier>
}
-- [1]1314:create table table_02 (     ESCAPE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'ESCAPE'. Expecting: ')', <identifier>
}
-- [1]1320:create table table_03  ( 	ESCAPE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ESCAPE'. Expecting: ')', <identifier>
}

-- [1]1324:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1327:drop database test
STRICT{
PASS
}
-- [1]1332:create database EXCEPT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'EXCEPT'. Expecting: 'IF', <identifier>
}
-- [1]1334:create database db.EXCEPT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1336:create database test
STRICT{
PASS
}
-- [1]1338:show databases
STRICT{
PASS
}
-- [1]1342:use test
STRICT{
PASS
}
-- [1]1348:create table EXCEPT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'EXCEPT'. Expecting: 'IF', <identifier>
}
-- [1]1357:create table table_01  ( 	EXCEPT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'EXCEPT'. Expecting: ')', <identifier>
}
-- [1]1363:create table table_02 (     EXCEPT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'EXCEPT'. Expecting: ')', <identifier>
}
-- [1]1369:create table table_03  ( 	EXCEPT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'EXCEPT'. Expecting: ')', <identifier>
}

-- [1]1373:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1376:drop database test
STRICT{
PASS
}
-- [1]1381:create database EXISTS
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'EXISTS'. Expecting: 'IF', <identifier>
}
-- [1]1383:create database db.EXISTS
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1385:create database test
STRICT{
PASS
}
-- [1]1387:show databases
STRICT{
PASS
}
-- [1]1391:use test
STRICT{
PASS
}
-- [1]1397:create table EXISTS  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'EXISTS'. Expecting: 'IF', <identifier>
}
-- [1]1406:create table table_01  ( 	EXISTS STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'EXISTS'. Expecting: ')', <identifier>
}
-- [1]1412:create table table_02 (     EXISTS STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'EXISTS'. Expecting: ')', <identifier>
}
-- [1]1418:create table table_03  ( 	EXISTS INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'EXISTS'. Expecting: ')', <identifier>
}

-- [1]1422:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1425:drop database test
STRICT{
PASS
}
-- [1]1430:create database EXTRACT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'EXTRACT'. Expecting: 'IF', <identifier>
}
-- [1]1432:create database db.EXTRACT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1434:create database test
STRICT{
PASS
}
-- [1]1436:show databases
STRICT{
PASS
}
-- [1]1440:use test
STRICT{
PASS
}
-- [1]1446:create table EXTRACT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'EXTRACT'. Expecting: 'IF', <identifier>
}
-- [1]1455:create table table_01  ( 	EXTRACT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'EXTRACT'. Expecting: ')', <identifier>
}
-- [1]1461:create table table_02 (     EXTRACT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'EXTRACT'. Expecting: ')', <identifier>
}
-- [1]1467:create table table_03  ( 	EXTRACT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'EXTRACT'. Expecting: ')', <identifier>
}

-- [1]1471:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1474:drop database test
STRICT{
PASS
}
-- [1]1479:create database FALSE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'FALSE'. Expecting: 'IF', <identifier>
}
-- [1]1481:create database db.FALSE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1483:create database test
STRICT{
PASS
}
-- [1]1485:show databases
STRICT{
PASS
}
-- [1]1489:use test
STRICT{
PASS
}
-- [1]1495:create table FALSE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'FALSE'. Expecting: 'IF', <identifier>
}
-- [1]1504:create table table_01  ( 	FALSE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'FALSE'. Expecting: ')', <identifier>
}
-- [1]1510:create table table_02 (     FALSE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'FALSE'. Expecting: ')', <identifier>
}
-- [1]1516:create table table_03  ( 	FALSE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'FALSE'. Expecting: ')', <identifier>
}

-- [1]1520:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1523:drop database test
STRICT{
PASS
}
-- [1]1528:create database FOR
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'FOR'. Expecting: 'IF', <identifier>
}
-- [1]1530:create database db.FOR
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1532:create database test
STRICT{
PASS
}
-- [1]1534:show databases
STRICT{
PASS
}
-- [1]1538:use test
STRICT{
PASS
}
-- [1]1544:create table FOR  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'FOR'. Expecting: 'IF', <identifier>
}
-- [1]1553:create table table_01  ( 	FOR STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'FOR'. Expecting: ')', <identifier>
}
-- [1]1559:create table table_02 (     FOR STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'FOR'. Expecting: ')', <identifier>
}
-- [1]1565:create table table_03  ( 	FOR INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'FOR'. Expecting: ')', <identifier>
}

-- [1]1569:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1572:drop database test
STRICT{
PASS
}
-- [1]1577:create database FROM
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'FROM'. Expecting: 'IF', <identifier>
}
-- [1]1579:create database db.FROM
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1581:create database test
STRICT{
PASS
}
-- [1]1583:show databases
STRICT{
PASS
}
-- [1]1587:use test
STRICT{
PASS
}
-- [1]1593:create table FROM  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'FROM'. Expecting: 'IF', <identifier>
}
-- [1]1602:create table table_01  ( 	FROM STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'FROM'. Expecting: ')', <identifier>
}
-- [1]1608:create table table_02 (     FROM STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'FROM'. Expecting: ')', <identifier>
}
-- [1]1614:create table table_03  ( 	FROM INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'FROM'. Expecting: ')', <identifier>
}

-- [1]1618:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1621:drop database test
STRICT{
PASS
}
-- [1]1626:create database FULL
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'FULL'. Expecting: 'IF', <identifier>
}
-- [1]1628:create database db.FULL
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1630:create database test
STRICT{
PASS
}
-- [1]1632:show databases
STRICT{
PASS
}
-- [1]1636:use test
STRICT{
PASS
}
-- [1]1642:create table FULL  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'FULL'. Expecting: 'IF', <identifier>
}
-- [1]1651:create table table_01  ( 	FULL STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'FULL'. Expecting: ')', <identifier>
}
-- [1]1657:create table table_02 (     FULL STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'FULL'. Expecting: ')', <identifier>
}
-- [1]1663:create table table_03  ( 	FULL INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'FULL'. Expecting: ')', <identifier>
}

-- [1]1667:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.4
-- [1]1670:drop database test
STRICT{
PASS
}
-- [1]1675:create database GROUP
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'GROUP'. Expecting: 'IF', <identifier>
}
-- [1]1677:create database db.GROUP
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1679:create database test
STRICT{
PASS
}
-- [1]1681:show databases
STRICT{
PASS
}
-- [1]1685:use test
STRICT{
PASS
}
-- [1]1691:create table GROUP  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'GROUP'. Expecting: 'IF', <identifier>
}
-- [1]1700:create table table_01  ( 	GROUP STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'GROUP'. Expecting: ')', <identifier>
}
-- [1]1706:create table table_02 (     GROUP STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'GROUP'. Expecting: ')', <identifier>
}
-- [1]1712:create table table_03  ( 	GROUP INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'GROUP'. Expecting: ')', <identifier>
}

-- [1]1716:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1719:drop database test
STRICT{
PASS
}
-- [1]1724:create database GROUPING
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'GROUPING'. Expecting: 'IF', <identifier>
}
-- [1]1726:create database db.GROUPING
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1728:create database test
STRICT{
PASS
}
-- [1]1730:show databases
STRICT{
PASS
}
-- [1]1734:use test
STRICT{
PASS
}
-- [1]1740:create table GROUPING  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'GROUPING'. Expecting: 'IF', <identifier>
}
-- [1]1749:create table table_01  ( 	GROUPING STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'GROUPING'. Expecting: ')', <identifier>
}
-- [1]1755:create table table_02 (     GROUPING STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'GROUPING'. Expecting: ')', <identifier>
}
-- [1]1761:create table table_03  ( 	GROUPING INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'GROUPING'. Expecting: ')', <identifier>
}

-- [1]1765:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.3
-- [1]1768:drop database test
STRICT{
PASS
}
-- [1]1773:create database HAVING
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'HAVING'. Expecting: 'IF', <identifier>
}
-- [1]1775:create database db.HAVING
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1777:create database test
STRICT{
PASS
}
-- [1]1779:show databases
STRICT{
PASS
}
-- [1]1783:use test
STRICT{
PASS
}
-- [1]1789:create table HAVING  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'HAVING'. Expecting: 'IF', <identifier>
}
-- [1]1798:create table table_01  ( 	HAVING STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'HAVING'. Expecting: ')', <identifier>
}
-- [1]1804:create table table_02 (     HAVING STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'HAVING'. Expecting: ')', <identifier>
}
-- [1]1810:create table table_03  ( 	HAVING INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'HAVING'. Expecting: ')', <identifier>
}

-- [1]1814:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.11
-- [1]1817:drop database test
STRICT{
PASS
}
-- [1]1822:create database IN
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'IN'. Expecting: 'IF', <identifier>
}
-- [1]1824:create database db.IN
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1826:create database test
STRICT{
PASS
}
-- [1]1828:show databases
STRICT{
PASS
}
-- [1]1832:use test
STRICT{
PASS
}
-- [1]1838:create table IN  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'IN'. Expecting: 'IF', <identifier>
}
-- [1]1847:create table table_01  ( 	IN STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'IN'. Expecting: ')', <identifier>
}
-- [1]1853:create table table_02 (     IN STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'IN'. Expecting: ')', <identifier>
}
-- [1]1859:create table table_03  ( 	IN INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'IN'. Expecting: ')', <identifier>
}

-- [1]1863:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]1866:drop database test
STRICT{
PASS
}
-- [1]1871:create database INNER
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'INNER'. Expecting: 'IF', <identifier>
}
-- [1]1873:create database db.INNER
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1875:create database test
STRICT{
PASS
}
-- [1]1877:show databases
STRICT{
PASS
}
-- [1]1881:use test
STRICT{
PASS
}
-- [1]1887:create table INNER  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'INNER'. Expecting: 'IF', <identifier>
}
-- [1]1896:create table table_01  ( 	INNER STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'INNER'. Expecting: ')', <identifier>
}
-- [1]1902:create table table_02 (     INNER STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'INNER'. Expecting: ')', <identifier>
}
-- [1]1908:create table table_03  ( 	INNER INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'INNER'. Expecting: ')', <identifier>
}

-- [1]1912:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]1915:drop database test
STRICT{
PASS
}
-- [1]1920:create database INSERT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'INSERT'. Expecting: 'IF', <identifier>
}
-- [1]1922:create database db.INSERT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1924:create database test
STRICT{
PASS
}
-- [1]1926:show databases
STRICT{
PASS
}
-- [1]1930:use test
STRICT{
PASS
}
-- [1]1936:create table INSERT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'INSERT'. Expecting: 'IF', <identifier>
}
-- [1]1945:create table table_01  ( 	INSERT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'INSERT'. Expecting: ')', <identifier>
}
-- [1]1951:create table table_02 (     INSERT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'INSERT'. Expecting: ')', <identifier>
}
-- [1]1957:create table table_03  ( 	INSERT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'INSERT'. Expecting: ')', <identifier>
}

-- [1]1961:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.5
-- [1]1964:drop database test
STRICT{
PASS
}
-- [1]1969:create database INTERSECT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'INTERSECT'. Expecting: 'IF', <identifier>
}
-- [1]1971:create database db.INTERSECT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]1973:create database test
STRICT{
PASS
}
-- [1]1975:show databases
STRICT{
PASS
}
-- [1]1979:use test
STRICT{
PASS
}
-- [1]1985:create table INTERSECT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'INTERSECT'. Expecting: 'IF', <identifier>
}
-- [1]1994:create table table_01  ( 	INTERSECT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'INTERSECT'. Expecting: ')', <identifier>
}
-- [1]2000:create table table_02 (     INTERSECT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'INTERSECT'. Expecting: ')', <identifier>
}
-- [1]2006:create table table_03  ( 	INTERSECT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'INTERSECT'. Expecting: ')', <identifier>
}

-- [1]2010:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.5
-- [1]2013:drop database test
STRICT{
PASS
}
-- [1]2018:create database INTO
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'INTO'. Expecting: 'IF', <identifier>
}
-- [1]2020:create database db.INTO
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2022:create database test
STRICT{
PASS
}
-- [1]2024:show databases
STRICT{
PASS
}
-- [1]2028:use test
STRICT{
PASS
}
-- [1]2034:create table INTO  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'INTO'. Expecting: 'IF', <identifier>
}
-- [1]2043:create table table_01  ( 	INTO STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'INTO'. Expecting: ')', <identifier>
}
-- [1]2049:create table table_02 (     INTO STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'INTO'. Expecting: ')', <identifier>
}
-- [1]2055:create table table_03  ( 	INTO INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'INTO'. Expecting: ')', <identifier>
}

-- [1]2059:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2062:drop database test
STRICT{
PASS
}
-- [1]2067:create database IS
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'IS'. Expecting: 'IF', <identifier>
}
-- [1]2069:create database db.IS
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2071:create database test
STRICT{
PASS
}
-- [1]2073:show databases
STRICT{
PASS
}
-- [1]2077:use test
STRICT{
PASS
}
-- [1]2083:create table IS  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'IS'. Expecting: 'IF', <identifier>
}
-- [1]2092:create table table_01  ( 	IS STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'IS'. Expecting: ')', <identifier>
}
-- [1]2098:create table table_02 (     IS STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'IS'. Expecting: ')', <identifier>
}
-- [1]2104:create table table_03  ( 	IS INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'IS'. Expecting: ')', <identifier>
}

-- [1]2108:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]2111:drop database test
STRICT{
PASS
}
-- [1]2116:create database JOIN
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'JOIN'. Expecting: 'IF', <identifier>
}
-- [1]2118:create database db.JOIN
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2120:create database test
STRICT{
PASS
}
-- [1]2122:show databases
STRICT{
PASS
}
-- [1]2126:use test
STRICT{
PASS
}
-- [1]2132:create table JOIN  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'JOIN'. Expecting: 'IF', <identifier>
}
-- [1]2141:create table table_01  ( 	JOIN STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JOIN'. Expecting: ')', <identifier>
}
-- [1]2147:create table table_02 (     JOIN STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'JOIN'. Expecting: ')', <identifier>
}
-- [1]2153:create table table_03  ( 	JOIN INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JOIN'. Expecting: ')', <identifier>
}

-- [1]2157:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]2160:drop database test
STRICT{
PASS
}
-- [1]2165:create database JSON_ARRAY
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'JSON_ARRAY'. Expecting: 'IF', <identifier>
}
-- [1]2167:create database db.JSON_ARRAY
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2169:create database test
STRICT{
PASS
}
-- [1]2171:show databases
STRICT{
PASS
}
-- [1]2175:use test
STRICT{
PASS
}
-- [1]2181:create table JSON_ARRAY  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'JSON_ARRAY'. Expecting: 'IF', <identifier>
}
-- [1]2190:create table table_01  ( 	JSON_ARRAY STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_ARRAY'. Expecting: ')', <identifier>
}
-- [1]2196:create table table_02 (     JSON_ARRAY STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'JSON_ARRAY'. Expecting: ')', <identifier>
}
-- [1]2202:create table table_03  ( 	JSON_ARRAY INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_ARRAY'. Expecting: ')', <identifier>
}

-- [1]2206:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2209:drop database test
STRICT{
PASS
}
-- [1]2214:create database JSON_EXISTS
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'JSON_EXISTS'. Expecting: 'IF', <identifier>
}
-- [1]2216:create database db.JSON_EXISTS
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2218:create database test
STRICT{
PASS
}
-- [1]2220:show databases
STRICT{
PASS
}
-- [1]2224:use test
STRICT{
PASS
}
-- [1]2230:create table JSON_EXISTS  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'JSON_EXISTS'. Expecting: 'IF', <identifier>
}
-- [1]2239:create table table_01  ( 	JSON_EXISTS STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_EXISTS'. Expecting: ')', <identifier>
}
-- [1]2245:create table table_02 (     JSON_EXISTS STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'JSON_EXISTS'. Expecting: ')', <identifier>
}
-- [1]2251:create table table_03  ( 	JSON_EXISTS INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_EXISTS'. Expecting: ')', <identifier>
}

-- [1]2255:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]2258:drop database test
STRICT{
PASS
}
-- [1]2263:create database JSON_OBJECT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'JSON_OBJECT'. Expecting: 'IF', <identifier>
}
-- [1]2265:create database db.JSON_OBJECT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2267:create database test
STRICT{
PASS
}
-- [1]2269:show databases
STRICT{
PASS
}
-- [1]2273:use test
STRICT{
PASS
}
-- [1]2279:create table JSON_OBJECT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'JSON_OBJECT'. Expecting: 'IF', <identifier>
}
-- [1]2288:create table table_01  ( 	JSON_OBJECT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_OBJECT'. Expecting: ')', <identifier>
}
-- [1]2294:create table table_02 (     JSON_OBJECT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'JSON_OBJECT'. Expecting: ')', <identifier>
}
-- [1]2300:create table table_03  ( 	JSON_OBJECT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_OBJECT'. Expecting: ')', <identifier>
}

-- [1]2304:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2307:drop database test
STRICT{
PASS
}
-- [1]2312:create database JSON_QUERY
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'JSON_QUERY'. Expecting: 'IF', <identifier>
}
-- [1]2314:create database db.JSON_QUERY
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2316:create database test
STRICT{
PASS
}
-- [1]2318:show databases
STRICT{
PASS
}
-- [1]2322:use test
STRICT{
PASS
}
-- [1]2328:create table JSON_QUERY  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'JSON_QUERY'. Expecting: 'IF', <identifier>
}
-- [1]2337:create table table_01  ( 	JSON_QUERY STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_QUERY'. Expecting: ')', <identifier>
}
-- [1]2343:create table table_02 (     JSON_QUERY STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'JSON_QUERY'. Expecting: ')', <identifier>
}
-- [1]2349:create table table_03  ( 	JSON_QUERY INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_QUERY'. Expecting: ')', <identifier>
}

-- [1]2353:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]2356:drop database test
STRICT{
PASS
}
-- [1]2361:create database JSON_TABLE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'JSON_TABLE'. Expecting: 'IF', <identifier>
}
-- [1]2363:create database db.JSON_TABLE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2365:create database test
STRICT{
PASS
}
-- [1]2367:show databases
STRICT{
PASS
}
-- [1]2371:use test
STRICT{
PASS
}
-- [1]2377:create table JSON_TABLE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'JSON_TABLE'. Expecting: 'IF', <identifier>
}
-- [1]2386:create table table_01  ( 	JSON_TABLE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_TABLE'. Expecting: ')', <identifier>
}
-- [1]2392:create table table_02 (     JSON_TABLE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'JSON_TABLE'. Expecting: ')', <identifier>
}
-- [1]2398:create table table_03  ( 	JSON_TABLE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_TABLE'. Expecting: ')', <identifier>
}

-- [1]2402:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2405:drop database test
STRICT{
PASS
}
-- [1]2410:create database JSON_VALUE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'JSON_VALUE'. Expecting: 'IF', <identifier>
}
-- [1]2412:create database db.JSON_VALUE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2414:create database test
STRICT{
PASS
}
-- [1]2416:show databases
STRICT{
PASS
}
-- [1]2420:use test
STRICT{
PASS
}
-- [1]2426:create table JSON_VALUE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'JSON_VALUE'. Expecting: 'IF', <identifier>
}
-- [1]2435:create table table_01  ( 	JSON_VALUE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_VALUE'. Expecting: ')', <identifier>
}
-- [1]2441:create table table_02 (     JSON_VALUE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'JSON_VALUE'. Expecting: ')', <identifier>
}
-- [1]2447:create table table_03  ( 	JSON_VALUE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'JSON_VALUE'. Expecting: ')', <identifier>
}

-- [1]2451:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2454:drop database test
STRICT{
PASS
}
-- [1]2459:create database LEFT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'LEFT'. Expecting: 'IF', <identifier>
}
-- [1]2461:create database db.LEFT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2463:create database test
STRICT{
PASS
}
-- [1]2465:show databases
STRICT{
PASS
}
-- [1]2469:use test
STRICT{
PASS
}
-- [1]2475:create table LEFT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'LEFT'. Expecting: 'IF', <identifier>
}
-- [1]2484:create table table_01  ( 	LEFT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'LEFT'. Expecting: ')', <identifier>
}
-- [1]2490:create table table_02 (     LEFT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'LEFT'. Expecting: ')', <identifier>
}
-- [1]2496:create table table_03  ( 	LEFT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'LEFT'. Expecting: ')', <identifier>
}

-- [1]2500:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2503:drop database test
STRICT{
PASS
}
-- [1]2508:create database LIKE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'LIKE'. Expecting: 'IF', <identifier>
}
-- [1]2510:create database db.LIKE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2512:create database test
STRICT{
PASS
}
-- [1]2514:show databases
STRICT{
PASS
}
-- [1]2518:use test
STRICT{
PASS
}
-- [1]2524:create table LIKE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'LIKE'. Expecting: 'IF', <identifier>
}
-- [1]2533:create table table_01  ( 	LIKE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'LIKE'. Expecting: ')', <identifier>
}
-- [1]2539:create table table_02 (     LIKE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'LIKE'. Expecting: ')', <identifier>
}
-- [1]2545:create table table_03  ( 	LIKE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'LIKE'. Expecting: ')', <identifier>
}

-- [1]2549:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2552:drop database test
STRICT{
PASS
}
-- [1]2557:create database LISTAGG
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'LISTAGG'. Expecting: 'IF', <identifier>
}
-- [1]2559:create database db.LISTAGG
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2561:create database test
STRICT{
PASS
}
-- [1]2563:show databases
STRICT{
PASS
}
-- [1]2567:use test
STRICT{
PASS
}
-- [1]2573:create table LISTAGG  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'LISTAGG'. Expecting: 'IF', <identifier>
}
-- [1]2582:create table table_01  ( 	LISTAGG STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'LISTAGG'. Expecting: ')', <identifier>
}
-- [1]2588:create table table_02 (     LISTAGG STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'LISTAGG'. Expecting: ')', <identifier>
}
-- [1]2594:create table table_03  ( 	LISTAGG INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'LISTAGG'. Expecting: ')', <identifier>
}

-- [1]2598:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]2601:drop database test
STRICT{
PASS
}
-- [1]2606:create database LOCALTIME
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'LOCALTIME'. Expecting: 'IF', <identifier>
}
-- [1]2608:create database db.LOCALTIME
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2610:create database test
STRICT{
PASS
}
-- [1]2612:show databases
STRICT{
PASS
}
-- [1]2616:use test
STRICT{
PASS
}
-- [1]2622:create table LOCALTIME  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'LOCALTIME'. Expecting: 'IF', <identifier>
}
-- [1]2631:create table table_01  ( 	LOCALTIME STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'LOCALTIME'. Expecting: ')', <identifier>
}
-- [1]2637:create table table_02 (     LOCALTIME STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'LOCALTIME'. Expecting: ')', <identifier>
}
-- [1]2643:create table table_03  ( 	LOCALTIME INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'LOCALTIME'. Expecting: ')', <identifier>
}

-- [1]2647:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2650:drop database test
STRICT{
PASS
}
-- [1]2655:create database LOCALTIMESTAMP
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'LOCALTIMESTAMP'. Expecting: 'IF', <identifier>
}
-- [1]2657:create database db.LOCALTIMESTAMP
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2659:create database test
STRICT{
PASS
}
-- [1]2661:show databases
STRICT{
PASS
}
-- [1]2665:use test
STRICT{
PASS
}
-- [1]2671:create table LOCALTIMESTAMP  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'LOCALTIMESTAMP'. Expecting: 'IF', <identifier>
}
-- [1]2680:create table table_01  ( 	LOCALTIMESTAMP STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'LOCALTIMESTAMP'. Expecting: ')', <identifier>
}
-- [1]2686:create table table_02 (     LOCALTIMESTAMP STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'LOCALTIMESTAMP'. Expecting: ')', <identifier>
}
-- [1]2692:create table table_03  ( 	LOCALTIMESTAMP INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'LOCALTIMESTAMP'. Expecting: ')', <identifier>
}

-- [1]2696:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]2699:drop database test
STRICT{
PASS
}
-- [1]2704:create database NATURAL
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'NATURAL'. Expecting: 'IF', <identifier>
}
-- [1]2706:create database db.NATURAL
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2708:create database test
STRICT{
PASS
}
-- [1]2710:show databases
STRICT{
PASS
}
-- [1]2714:use test
STRICT{
PASS
}
-- [1]2720:create table NATURAL  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'NATURAL'. Expecting: 'IF', <identifier>
}
-- [1]2729:create table table_01  ( 	NATURAL STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'NATURAL'. Expecting: ')', <identifier>
}
-- [1]2735:create table table_02 (     NATURAL STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'NATURAL'. Expecting: ')', <identifier>
}
-- [1]2741:create table table_03  ( 	NATURAL INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'NATURAL'. Expecting: ')', <identifier>
}

-- [1]2745:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]2748:drop database test
STRICT{
PASS
}
-- [1]2753:create database NORMALIZE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'NORMALIZE'. Expecting: 'IF', <identifier>
}
-- [1]2755:create database db.NORMALIZE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2757:create database test
STRICT{
PASS
}
-- [1]2759:show databases
STRICT{
PASS
}
-- [1]2763:use test
STRICT{
PASS
}
-- [1]2769:create table NORMALIZE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'NORMALIZE'. Expecting: 'IF', <identifier>
}
-- [1]2778:create table table_01  ( 	NORMALIZE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'NORMALIZE'. Expecting: ')', <identifier>
}
-- [1]2784:create table table_02 (     NORMALIZE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'NORMALIZE'. Expecting: ')', <identifier>
}
-- [1]2790:create table table_03  ( 	NORMALIZE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'NORMALIZE'. Expecting: ')', <identifier>
}

-- [1]2794:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2797:drop database test
STRICT{
PASS
}
-- [1]2802:create database NOT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'NOT'. Expecting: 'IF', <identifier>
}
-- [1]2804:create database db.NOT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2806:create database test
STRICT{
PASS
}
-- [1]2808:show databases
STRICT{
PASS
}
-- [1]2812:use test
STRICT{
PASS
}
-- [1]2818:create table NOT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'NOT'. Expecting: 'IF', <identifier>
}
-- [1]2827:create table table_01  ( 	NOT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'NOT'. Expecting: ')', <identifier>
}
-- [1]2833:create table table_02 (     NOT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'NOT'. Expecting: ')', <identifier>
}
-- [1]2839:create table table_03  ( 	NOT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'NOT'. Expecting: ')', <identifier>
}

-- [1]2843:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2846:drop database test
STRICT{
PASS
}
-- [1]2851:create database NULL
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'NULL'. Expecting: 'IF', <identifier>
}
-- [1]2853:create database db.NULL
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2855:create database test
STRICT{
PASS
}
-- [1]2857:show databases
STRICT{
PASS
}
-- [1]2861:use test
STRICT{
PASS
}
-- [1]2867:create table NULL  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'NULL'. Expecting: 'IF', <identifier>
}
-- [1]2876:create table table_01  ( 	NULL STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'NULL'. Expecting: ')', <identifier>
}
-- [1]2882:create table table_02 (     NULL STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'NULL'. Expecting: ')', <identifier>
}
-- [1]2888:create table table_03  ( 	NULL INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'NULL'. Expecting: ')', <identifier>
}

-- [1]2892:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]2895:drop database test
STRICT{
PASS
}
-- [1]2900:create database ON
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'ON'. Expecting: 'IF', <identifier>
}
-- [1]2902:create database db.ON
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2904:create database test
STRICT{
PASS
}
-- [1]2906:show databases
STRICT{
PASS
}
-- [1]2910:use test
STRICT{
PASS
}
-- [1]2916:create table ON  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'ON'. Expecting: 'IF', <identifier>
}
-- [1]2925:create table table_01  ( 	ON STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ON'. Expecting: ')', <identifier>
}
-- [1]2931:create table table_02 (     ON STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'ON'. Expecting: ')', <identifier>
}
-- [1]2937:create table table_03  ( 	ON INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ON'. Expecting: ')', <identifier>
}

-- [1]2941:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2944:drop database test
STRICT{
PASS
}
-- [1]2949:create database OR
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'OR'. Expecting: 'IF', <identifier>
}
-- [1]2951:create database db.OR
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]2953:create database test
STRICT{
PASS
}
-- [1]2955:show databases
STRICT{
PASS
}
-- [1]2959:use test
STRICT{
PASS
}
-- [1]2965:create table OR  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'OR'. Expecting: 'IF', <identifier>
}
-- [1]2974:create table table_01  ( 	OR STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'OR'. Expecting: ')', <identifier>
}
-- [1]2980:create table table_02 (     OR STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'OR'. Expecting: ')', <identifier>
}
-- [1]2986:create table table_03  ( 	OR INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'OR'. Expecting: ')', <identifier>
}

-- [1]2990:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]2993:drop database test
STRICT{
PASS
}
-- [1]2998:create database ORDER
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'ORDER'. Expecting: 'IF', <identifier>
}
-- [1]3000:create database db.ORDER
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3002:create database test
STRICT{
PASS
}
-- [1]3004:show databases
STRICT{
PASS
}
-- [1]3008:use test
STRICT{
PASS
}
-- [1]3014:create table ORDER  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'ORDER'. Expecting: 'IF', <identifier>
}
-- [1]3023:create table table_01  ( 	ORDER STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ORDER'. Expecting: ')', <identifier>
}
-- [1]3029:create table table_02 (     ORDER STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'ORDER'. Expecting: ')', <identifier>
}
-- [1]3035:create table table_03  ( 	ORDER INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ORDER'. Expecting: ')', <identifier>
}

-- [1]3039:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]3042:drop database test
STRICT{
PASS
}
-- [1]3047:create database OUTER
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'OUTER'. Expecting: 'IF', <identifier>
}
-- [1]3049:create database db.OUTER
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3051:create database test
STRICT{
PASS
}
-- [1]3053:show databases
STRICT{
PASS
}
-- [1]3057:use test
STRICT{
PASS
}
-- [1]3063:create table OUTER  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'OUTER'. Expecting: 'IF', <identifier>
}
-- [1]3072:create table table_01  ( 	OUTER STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'OUTER'. Expecting: ')', <identifier>
}
-- [1]3078:create table table_02 (     OUTER STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'OUTER'. Expecting: ')', <identifier>
}
-- [1]3084:create table table_03  ( 	OUTER INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'OUTER'. Expecting: ')', <identifier>
}

-- [1]3088:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]3091:drop database test
STRICT{
PASS
}
-- [1]3096:create database PREPARE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'PREPARE'. Expecting: 'IF', <identifier>
}
-- [1]3098:create database db.PREPARE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3100:create database test
STRICT{
PASS
}
-- [1]3102:show databases
STRICT{
PASS
}
-- [1]3106:use test
STRICT{
PASS
}
-- [1]3112:create table PREPARE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'PREPARE'. Expecting: 'IF', <identifier>
}
-- [1]3121:create table table_01  ( 	PREPARE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'PREPARE'. Expecting: ')', <identifier>
}
-- [1]3127:create table table_02 (     PREPARE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'PREPARE'. Expecting: ')', <identifier>
}
-- [1]3133:create table table_03  ( 	PREPARE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'PREPARE'. Expecting: ')', <identifier>
}

-- [1]3137:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3140:drop database test
STRICT{
PASS
}
-- [1]3145:create database RECURSIVE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'RECURSIVE'. Expecting: 'IF', <identifier>
}
-- [1]3147:create database db.RECURSIVE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3149:create database test
STRICT{
PASS
}
-- [1]3151:show databases
STRICT{
PASS
}
-- [1]3155:use test
STRICT{
PASS
}
-- [1]3161:create table RECURSIVE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'RECURSIVE'. Expecting: 'IF', <identifier>
}
-- [1]3170:create table table_01  ( 	RECURSIVE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'RECURSIVE'. Expecting: ')', <identifier>
}
-- [1]3176:create table table_02 (     RECURSIVE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'RECURSIVE'. Expecting: ')', <identifier>
}
-- [1]3182:create table table_03  ( 	RECURSIVE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'RECURSIVE'. Expecting: ')', <identifier>
}

-- [1]3186:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]3189:drop database test
STRICT{
PASS
}
-- [1]3194:create database RIGHT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'RIGHT'. Expecting: 'IF', <identifier>
}
-- [1]3196:create database db.RIGHT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3198:create database test
STRICT{
PASS
}
-- [1]3200:show databases
STRICT{
PASS
}
-- [1]3204:use test
STRICT{
PASS
}
-- [1]3210:create table RIGHT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'RIGHT'. Expecting: 'IF', <identifier>
}
-- [1]3219:create table table_01  ( 	RIGHT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'RIGHT'. Expecting: ')', <identifier>
}
-- [1]3225:create table table_02 (     RIGHT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'RIGHT'. Expecting: ')', <identifier>
}
-- [1]3231:create table table_03  ( 	RIGHT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'RIGHT'. Expecting: ')', <identifier>
}

-- [1]3235:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3238:drop database test
STRICT{
PASS
}
-- [1]3243:create database ROLLUP
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'ROLLUP'. Expecting: 'IF', <identifier>
}
-- [1]3245:create database db.ROLLUP
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3247:create database test
STRICT{
PASS
}
-- [1]3249:show databases
STRICT{
PASS
}
-- [1]3253:use test
STRICT{
PASS
}
-- [1]3259:create table ROLLUP  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'ROLLUP'. Expecting: 'IF', <identifier>
}
-- [1]3268:create table table_01  ( 	ROLLUP STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ROLLUP'. Expecting: ')', <identifier>
}
-- [1]3274:create table table_02 (     ROLLUP STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'ROLLUP'. Expecting: ')', <identifier>
}
-- [1]3280:create table table_03  ( 	ROLLUP INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'ROLLUP'. Expecting: ')', <identifier>
}

-- [1]3284:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3287:drop database test
STRICT{
PASS
}
-- [1]3292:create database SELECT
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'SELECT'. Expecting: 'IF', <identifier>
}
-- [1]3294:create database db.SELECT
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3296:create database test
STRICT{
PASS
}
-- [1]3298:show databases
STRICT{
PASS
}
-- [1]3302:use test
STRICT{
PASS
}
-- [1]3308:create table SELECT  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'SELECT'. Expecting: 'IF', <identifier>
}
-- [1]3317:create table table_01  ( 	SELECT STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'SELECT'. Expecting: ')', <identifier>
}
-- [1]3323:create table table_02 (     SELECT STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'SELECT'. Expecting: ')', <identifier>
}
-- [1]3329:create table table_03  ( 	SELECT INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'SELECT'. Expecting: ')', <identifier>
}

-- [1]3333:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3336:drop database test
STRICT{
PASS
}
-- [1]3341:create database SKIP
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'SKIP'. Expecting: 'IF', <identifier>
}
-- [1]3343:create database db.SKIP
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3345:create database test
STRICT{
PASS
}
-- [1]3347:show databases
STRICT{
PASS
}
-- [1]3351:use test
STRICT{
PASS
}
-- [1]3357:create table SKIP  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'SKIP'. Expecting: 'IF', <identifier>
}
-- [1]3366:create table table_01  ( 	SKIP STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'SKIP'. Expecting: ')', <identifier>
}
-- [1]3372:create table table_02 (     SKIP STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'SKIP'. Expecting: ')', <identifier>
}
-- [1]3378:create table table_03  ( 	SKIP INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'SKIP'. Expecting: ')', <identifier>
}

-- [1]3382:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]3385:drop database test
STRICT{
PASS
}
-- [1]3390:create database TABLE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'TABLE'. Expecting: 'IF', <identifier>
}
-- [1]3392:create database db.TABLE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3394:create database test
STRICT{
PASS
}
-- [1]3396:show databases
STRICT{
PASS
}
-- [1]3400:use test
STRICT{
PASS
}
-- [1]3406:create table TABLE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'TABLE'. Expecting: 'IF', <identifier>
}
-- [1]3415:create table table_01  ( 	TABLE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'TABLE'. Expecting: ')', <identifier>
}
-- [1]3421:create table table_02 (     TABLE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'TABLE'. Expecting: ')', <identifier>
}
-- [1]3427:create table table_03  ( 	TABLE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'TABLE'. Expecting: ')', <identifier>
}

-- [1]3431:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3434:drop database test
STRICT{
PASS
}
-- [1]3439:create database THEN
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'THEN'. Expecting: 'IF', <identifier>
}
-- [1]3441:create database db.THEN
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3443:create database test
STRICT{
PASS
}
-- [1]3445:show databases
STRICT{
PASS
}
-- [1]3449:use test
STRICT{
PASS
}
-- [1]3455:create table THEN  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'THEN'. Expecting: 'IF', <identifier>
}
-- [1]3464:create table table_01  ( 	THEN STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'THEN'. Expecting: ')', <identifier>
}
-- [1]3470:create table table_02 (     THEN STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'THEN'. Expecting: ')', <identifier>
}
-- [1]3476:create table table_03  ( 	THEN INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'THEN'. Expecting: ')', <identifier>
}

-- [1]3480:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3483:drop database test
STRICT{
PASS
}
-- [1]3488:create database TRIM
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'TRIM'. Expecting: 'IF', <identifier>
}
-- [1]3490:create database db.TRIM
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3492:create database test
STRICT{
PASS
}
-- [1]3494:show databases
STRICT{
PASS
}
-- [1]3498:use test
STRICT{
PASS
}
-- [1]3504:create table TRIM  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'TRIM'. Expecting: 'IF', <identifier>
}
-- [1]3513:create table table_01  ( 	TRIM STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'TRIM'. Expecting: ')', <identifier>
}
-- [1]3519:create table table_02 (     TRIM STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'TRIM'. Expecting: ')', <identifier>
}
-- [1]3525:create table table_03  ( 	TRIM INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'TRIM'. Expecting: ')', <identifier>
}

-- [1]3529:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3532:drop database test
STRICT{
PASS
}
-- [1]3537:create database TRUE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'TRUE'. Expecting: 'IF', <identifier>
}
-- [1]3539:create database db.TRUE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3541:create database test
STRICT{
PASS
}
-- [1]3543:show databases
STRICT{
PASS
}
-- [1]3547:use test
STRICT{
PASS
}
-- [1]3553:create table TRUE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'TRUE'. Expecting: 'IF', <identifier>
}
-- [1]3562:create table table_01  ( 	TRUE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'TRUE'. Expecting: ')', <identifier>
}
-- [1]3568:create table table_02 (     TRUE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'TRUE'. Expecting: ')', <identifier>
}
-- [1]3574:create table table_03  ( 	TRUE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'TRUE'. Expecting: ')', <identifier>
}

-- [1]3578:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.5
-- [1]3581:drop database test
STRICT{
PASS
}
-- [1]3586:create database UESCAPE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'UESCAPE'. Expecting: 'IF', <identifier>
}
-- [1]3588:create database db.UESCAPE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3590:create database test
STRICT{
PASS
}
-- [1]3592:show databases
STRICT{
PASS
}
-- [1]3596:use test
STRICT{
PASS
}
-- [1]3602:create table UESCAPE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'UESCAPE'. Expecting: 'IF', <identifier>
}
-- [1]3611:create table table_01  ( 	UESCAPE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'UESCAPE'. Expecting: ')', <identifier>
}
-- [1]3617:create table table_02 (     UESCAPE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'UESCAPE'. Expecting: ')', <identifier>
}
-- [1]3623:create table table_03  ( 	UESCAPE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'UESCAPE'. Expecting: ')', <identifier>
}

-- [1]3627:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.2
-- [1]3630:drop database test
STRICT{
PASS
}
-- [1]3635:create database UNION
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'UNION'. Expecting: 'IF', <identifier>
}
-- [1]3637:create database db.UNION
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3639:create database test
STRICT{
PASS
}
-- [1]3641:show databases
STRICT{
PASS
}
-- [1]3645:use test
STRICT{
PASS
}
-- [1]3651:create table UNION  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'UNION'. Expecting: 'IF', <identifier>
}
-- [1]3660:create table table_01  ( 	UNION STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'UNION'. Expecting: ')', <identifier>
}
-- [1]3666:create table table_02 (     UNION STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'UNION'. Expecting: ')', <identifier>
}
-- [1]3672:create table table_03  ( 	UNION INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'UNION'. Expecting: ')', <identifier>
}

-- [1]3676:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]3679:drop database test
STRICT{
PASS
}
-- [1]3684:create database UNNEST
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'UNNEST'. Expecting: 'IF', <identifier>
}
-- [1]3686:create database db.UNNEST
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3688:create database test
STRICT{
PASS
}
-- [1]3690:show databases
STRICT{
PASS
}
-- [1]3694:use test
STRICT{
PASS
}
-- [1]3700:create table UNNEST  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'UNNEST'. Expecting: 'IF', <identifier>
}
-- [1]3709:create table table_01  ( 	UNNEST STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'UNNEST'. Expecting: ')', <identifier>
}
-- [1]3715:create table table_02 (     UNNEST STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'UNNEST'. Expecting: ')', <identifier>
}
-- [1]3721:create table table_03  ( 	UNNEST INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'UNNEST'. Expecting: ')', <identifier>
}

-- [1]3725:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]3728:drop database test
STRICT{
PASS
}
-- [1]3733:create database USING
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'USING'. Expecting: 'IF', <identifier>
}
-- [1]3735:create database db.USING
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3737:create database test
STRICT{
PASS
}
-- [1]3739:show databases
STRICT{
PASS
}
-- [1]3743:use test
STRICT{
PASS
}
-- [1]3749:create table USING  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'USING'. Expecting: 'IF', <identifier>
}
-- [1]3758:create table table_01  ( 	USING STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'USING'. Expecting: ')', <identifier>
}
-- [1]3764:create table table_02 (     USING STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'USING'. Expecting: ')', <identifier>
}
-- [1]3770:create table table_03  ( 	USING INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'USING'. Expecting: ')', <identifier>
}

-- [1]3774:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.0
-- [1]3777:drop database test
STRICT{
PASS
}
-- [1]3782:create database VALUES
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'VALUES'. Expecting: 'IF', <identifier>
}
-- [1]3784:create database db.VALUES
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3786:create database test
STRICT{
PASS
}
-- [1]3788:show databases
STRICT{
PASS
}
-- [1]3792:use test
STRICT{
PASS
}
-- [1]3798:create table VALUES  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'VALUES'. Expecting: 'IF', <identifier>
}
-- [1]3807:create table table_01  ( 	VALUES STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'VALUES'. Expecting: ')', <identifier>
}
-- [1]3813:create table table_02 (     VALUES STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'VALUES'. Expecting: ')', <identifier>
}
-- [1]3819:create table table_03  ( 	VALUES INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'VALUES'. Expecting: ')', <identifier>
}

-- [1]3823:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3826:drop database test
STRICT{
PASS
}
-- [1]3831:create database WHEN
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'WHEN'. Expecting: 'IF', <identifier>
}
-- [1]3833:create database db.WHEN
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3835:create database test
STRICT{
PASS
}
-- [1]3837:show databases
STRICT{
PASS
}
-- [1]3841:use test
STRICT{
PASS
}
-- [1]3847:create table WHEN  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'WHEN'. Expecting: 'IF', <identifier>
}
-- [1]3856:create table table_01  ( 	WHEN STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'WHEN'. Expecting: ')', <identifier>
}
-- [1]3862:create table table_02 (     WHEN STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'WHEN'. Expecting: ')', <identifier>
}
-- [1]3868:create table table_03  ( 	WHEN INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'WHEN'. Expecting: ')', <identifier>
}

-- [1]3872:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3875:drop database test
STRICT{
PASS
}
-- [1]3880:create database WHERE
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'WHERE'. Expecting: 'IF', <identifier>
}
-- [1]3882:create database db.WHERE
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3884:create database test
STRICT{
PASS
}
-- [1]3886:show databases
STRICT{
PASS
}
-- [1]3890:use test
STRICT{
PASS
}
-- [1]3896:create table WHERE  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'WHERE'. Expecting: 'IF', <identifier>
}
-- [1]3905:create table table_01  ( 	WHERE STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'WHERE'. Expecting: ')', <identifier>
}
-- [1]3911:create table table_02 (     WHERE STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'WHERE'. Expecting: ')', <identifier>
}
-- [1]3917:create table table_03  ( 	WHERE INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'WHERE'. Expecting: ')', <identifier>
}

-- [1]3921:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3924:drop database test
STRICT{
PASS
}
-- [1]3929:create database WITH
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'WITH'. Expecting: 'IF', <identifier>
}
-- [1]3931:create database db.WITH
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3933:create database test
STRICT{
PASS
}
-- [1]3935:show databases
STRICT{
PASS
}
-- [1]3939:use test
STRICT{
PASS
}
-- [1]3945:create table WITH  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'WITH'. Expecting: 'IF', <identifier>
}
-- [1]3954:create table table_01  ( 	WITH STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'WITH'. Expecting: ')', <identifier>
}
-- [1]3960:create table table_02 (     WITH STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'WITH'. Expecting: ')', <identifier>
}
-- [1]3966:create table table_03  ( 	WITH INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'WITH'. Expecting: ')', <identifier>
}

-- [1]3970:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]3973:drop database test
STRICT{
PASS
}
-- [1]3978:create database FILL
STRICT{
SQLSTATE : 700: line 1:17: mismatched input 'FILL'. Expecting: 'IF', <identifier>
}
-- [1]3980:create database db.FILL
STRICT{
SQLSTATE : 700: line 1:19: mismatched input '.'. Expecting: 'WITH', <EOF>
}
-- [1]3982:create database test
STRICT{
PASS
}
-- [1]3984:show databases
STRICT{
PASS
}
-- [1]3988:use test
STRICT{
PASS
}
-- [1]3994:create table FILL  ( 	device_id STRING TAG, 	s1 BOOLEAN FIELD, 	s2 INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:14: mismatched input 'FILL'. Expecting: 'IF', <identifier>
}
-- [1]4003:create table table_01  ( 	FILL STRING TAG )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'FILL'. Expecting: ')', <identifier>
}
-- [1]4009:create table table_02 (     FILL STRING ATTRIBUTE )
STRICT{
SQLSTATE : 700: line 1:29: mismatched input 'FILL'. Expecting: ')', <identifier>
}
-- [1]4015:create table table_03  ( 	FILL INT32 FIELD )
STRICT{
SQLSTATE : 700: line 1:27: mismatched input 'FILL'. Expecting: ')', <identifier>
}

-- [1]4019:show tables
STRICT{
TableName(TEXT)      |TTL(ms)(TEXT)      |
总数目：0
}

Elapsed Time: 0.0.1
-- [1]4022:drop database test
STRICT{
PASS
}
