// 字符串函数查询

connect root/root;
--0.清理数据: 删除数据库 
drop database test_db;
<<NULL;


--1. 创建数据库
create database test_db;

--2. 指定数据库
use test_db;

--3. 创建表
create table Table_A
(
	device_id STRING ID,
	color STRING ATTRIBUTE,
	s0 BOOLEAN MEASUREMENT,
	s1 TEXT MEASUREMENT,
	s2 INT32 MEASUREMENT,
	s3 INT64 MEASUREMENT,
	s4 FLOAT MEASUREMENT,
	s5 DOUBLE MEASUREMENT,
	s6 BOOLEAN MEASUREMENT,
	s7 DATE MEASUREMENT,
	s8 TIMESTAMP MEASUREMENT,
	s9 STRING MEASUREMENT,
	s10 BLOB MEASUREMENT
);

--4. 查看表
show tables;

--5. 展示表结构信息
desc Table_A;

--6. 数据写入
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
1, 'device_A1', 'r e d', false, 'China', 10, 100, 11.1, 8.8, true, '2021-10-01', 1633046400000, ' Smile', X'abcd'
);
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
2, ' device B2', 'black', true, 'America ', 5, 121, 222.1, 12.2, false, '2022-10-01', 1724049989000, 'S a d', X'24ad'
);
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
3, 'device_C3 ', ' yellow', true, ' Africa', 13, 250, 1.1, 333.3, true, '2023-11-01', 1704046789000, 'laugh ', X'a2cd'
);
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
4, ' device_D4 ', 'green ', false, 'Europe', 4, 6, 21.1, 44.2, false, '2023-09-01', 1703047789000, 'Cry', X'24'
);
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
5, ' device _ E5', ' whi te ', false, 'Eng land', 122, 110, 2.2, 9.9, false, '2022-11-01', 1701047739000, 'LOVELY', X'cd'
);
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
6, 'device_F 6 ', ' orange ', false, ' Canada ', 8, 999, 123.1, 0.101, true, '2002-01-01', 1724049989000, 'Awkward', X'4d'
);
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
7, 'dev ice_AA', ' blue', true, 'Africa', 0, 110, 22.2, 1.8, true, '2023-06-01', 1643046400000, 'disappointING', X'ac'
 );
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
8, 'device BB', 'purple', true, ' Australia', 555, 1001, 202.1, 1.2, false, '2002-10-01', 1653046400000, 'happy_and_satisfied ', X'abcdef'
);
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
9, 'device_cC', 'Green', false, 'Swiss', 1110, 888, 10.1, 11.1, true, '2023-11-11', 1699685189000, 'FRIENDly', X'ce'
);
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
10, 'de vice d d', 'Pink', false, 'Ja pan', 111, 222, 22.5, 13.3, true, '2020-10-11', 1702277189000, 'SOB', X'ae'
);
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
11, null, 'Grey', null, 'South Korea', 111, 20, 2, 11.3, true, null, 1702277189000, 'un happy ', X'ae'
);
INSERT INTO Table_A(
time, device_id, color, s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10
) values(
12, 'd1', null, true, 'Singapore', null, 22, 2.5, 13.3, true, null, 1702277189000, ' sorrow', X'ae'
);
 
--7. 原始数据查询：
select * from Table_A order by time;

--8.length
--8.1 不支持的使用方式以及不支持的数据类型（INT32 | INT64 | FLOAT | DOUBLE | BOOLEAN | DATE | TIMESTAMP | BLOB）进行验证
select length() from table_a; <<SQLSTATE;
select length(s2) from table_a; <<SQLSTATE;
select length(s3) from table_a; <<SQLSTATE;
select length(s4) from table_a; <<SQLSTATE;
select length(s5) from table_a; <<SQLSTATE;
select length(s6) from table_a; <<SQLSTATE;
select length(s7) from table_a; <<SQLSTATE;
select length(s8) from table_a; <<SQLSTATE;
select length(s10) from table_a; <<SQLSTATE;
--8.2 支持的数据类型（TEXT | STRING）
select device_id, length(device_id) from table_a;
select color, length(color) from table_a;
select s1, length(s1) from table_a;
select s9, length(s9) from table_a;

--9.upper
--9.1 不支持的使用方式以及不支持的数据类型（INT32 | INT64 | FLOAT | DOUBLE | BOOLEAN | DATE | TIMESTAMP | BLOB）进行验证
select upper() from table_a; <<SQLSTATE;
select upper(s2) from table_a; <<SQLSTATE;
select upper(s3) from table_a; <<SQLSTATE;
select upper(s4) from table_a; <<SQLSTATE;
select upper(s5) from table_a; <<SQLSTATE;
select upper(s6) from table_a; <<SQLSTATE;
select upper(s7) from table_a; <<SQLSTATE;
select upper(s8) from table_a; <<SQLSTATE;
select upper(s10) from table_a; <<SQLSTATE;
--9.2 支持的数据类型（TEXT | STRING）
select device_id, upper(device_id) from table_a;
select color, upper(color) from table_a;
select s1, upper(s1) from table_a;
select s9, upper(s9) from table_a;

--10. lower
--10.1 不支持的使用方式以及不支持的数据类型（INT32 | INT64 | FLOAT | DOUBLE | BOOLEAN | DATE | TIMESTAMP | BLOB）进行验证
select lower() from table_a; <<SQLSTATE;
select lower(s2) from table_a; <<SQLSTATE;
select lower(s3) from table_a; <<SQLSTATE;
select lower(s4) from table_a; <<SQLSTATE;
select lower(s5) from table_a; <<SQLSTATE;
select lower(s6) from table_a; <<SQLSTATE;
select lower(s7) from table_a; <<SQLSTATE;
select lower(s8) from table_a; <<SQLSTATE;
select lower(s10) from table_a; <<SQLSTATE;
--10.2 支持的数据类型（TEXT | STRING）
select device_id, lower(device_id) from table_a;
select color, lower(color) from table_a;
select s1, lower(s1) from table_a;
select s9, lower(s9) from table_a;

--11. trim
--11.1 不支持的使用方式以及不支持的数据类型（INT32 | INT64 | FLOAT | DOUBLE | BOOLEAN | DATE | TIMESTAMP | BLOB）进行验证
select trim() from table_a; <<SQLSTATE;
select trim(s2) from table_a; <<SQLSTATE;
select trim(s3) from table_a; <<SQLSTATE;
select trim(s4) from table_a; <<SQLSTATE;
select trim(s5) from table_a; <<SQLSTATE;
select trim(s6) from table_a; <<SQLSTATE;
select trim(s7) from table_a; <<SQLSTATE;
select trim(s8) from table_a; <<SQLSTATE;
select trim(s10) from table_a; <<SQLSTATE;
--11.2 支持的数据类型（TEXT | STRING）
select time, device_id, trim(device_id) from table_a;
select time, color, trim(color) from table_a;
select time, s1, trim(s1) from table_a;
select time, s9, trim(s9) from table_a;
select s1, s9, trim(BOTH s1 FROM s9) from table_a;
select s1, s9, trim(BOTH s9 FROM s1) from table_a;
select device_id, trim('device' FROM device_id) as trim_result from table_a;
select color, trim('k' FROM color) as trim_result from table_a;
select s1, trim('ca' FROM s1) as trim_result from table_a;
select s9, trim('d' FROM s9) as trim_result from table_a;
select device_id, trim(LEADING FROM device_id) as trim_result from table_a;
select color, trim(LEADING FROM color) as trim_result from table_a;
select s1, trim(LEADING FROM s1) as trim_result from table_a;
select s9, trim(LEADING FROM s9) as trim_result from table_a;
select device_id, trim(TRAILING from device_id) from table_a;
select color, trim(TRAILING from color) from table_a;
select s1, trim(TRAILING from s1) from table_a;
select s9, trim(TRAILING from s9) from table_a;
select s1, trim(LEADING FROM s1) as result1, s9, trim(s9) as result2 from table_a;
select s1, trim(s1, 'ca') as result1, s9, trim('ppy' FROM s9) as result2 from table_a;
select device_id, color, s1, s9, trim(BOTH device_id FROM s9) as result1, trim(TRAILING s9 FROM s1) as result2 from table_a;
select color, trim(LEADING 'GE' FROM upper(color)) as result1, s9, trim(TRAILING 'dgh' FROM lower(s9)) as result2 from table_a;

--12. strpos:返回子字符串在指定字符串中的位置
--12.1 不支持的使用方式以及不支持的数据类型（INT32 | INT64 | FLOAT | DOUBLE | BOOLEAN | DATE | TIMESTAMP | BLOB）进行验证
select strpos() from table_a; <<SQLSTATE;
select strpos(s2) from table_a; <<SQLSTATE;
select strpos(s3) from table_a; <<SQLSTATE;
select strpos(s4) from table_a; <<SQLSTATE;
select strpos(s5) from table_a; <<SQLSTATE;
select strpos(s6) from table_a; <<SQLSTATE;
select strpos(s7) from table_a; <<SQLSTATE;
select strpos(s8) from table_a; <<SQLSTATE;
select strpos(s10) from table_a; <<SQLSTATE;
--12.2 支持的数据类型（TEXT | STRING）
select device_id, strpos(device_id,'ice') as strpos_result from table_a;
select color, strpos(color,'e') as strpos_result from table_a;
select s1, strpos(s1,'a') as strpos_result from table_a;
select s9, strpos(s9,'y') as strpos_result from table_a;

--13. starts_with:检查一个字符串是否以一个指定的前缀开头
-13.1 不支持的使用方式以及不支持的数据类型（INT32 | INT64 | FLOAT | DOUBLE | BOOLEAN | DATE | TIMESTAMP | BLOB）进行验证
select starts_with() from table_a; <<SQLSTATE;
select starts_with(s2) from table_a; <<SQLSTATE;
select starts_with(s3) from table_a; <<SQLSTATE;
select starts_with(s4) from table_a; <<SQLSTATE;
select starts_with(s5) from table_a; <<SQLSTATE;
select starts_with(s6) from table_a; <<SQLSTATE;
select starts_with(s7) from table_a; <<SQLSTATE;
select starts_with(s8) from table_a; <<SQLSTATE;
select starts_with(s10) from table_a; <<SQLSTATE;
--13.2 支持的数据类型（TEXT | STRING）
select device_id, starts_with(device_id, 'device') as starts_end_result from table_a;
select color, starts_with(color, 'Gr') as starts_end_result from table_a;
select s1, starts_with(s1, 'A') as starts_end_result from table_a;
select s9, starts_with(s9, 'S') as starts_end_result from table_a;

--14. ends_with
-14.1 不支持的使用方式以及不支持的数据类型（INT32 | INT64 | FLOAT | DOUBLE | BOOLEAN | DATE | TIMESTAMP | BLOB）进行验证
select ends_with() from table_a; <<SQLSTATE;
select ends_with(s2) from table_a; <<SQLSTATE;
select ends_with(s3) from table_a; <<SQLSTATE;
select ends_with(s4) from table_a; <<SQLSTATE;
select ends_with(s5) from table_a; <<SQLSTATE;
select ends_with(s6) from table_a; <<SQLSTATE;
select ends_with(s7) from table_a; <<SQLSTATE;
select ends_with(s8) from table_a; <<SQLSTATE;
select ends_with(s10) from table_a; <<SQLSTATE;
--14.2 支持的数据类型（TEXT | STRING）
select device_id, ends_with(device_id, '1') as ends_with_result from table_a;
select color, ends_with(color, 'een') as ends_with_result from table_a;
select s1, ends_with(s1, 'ca') as ends_with_result from table_a;
select s9, ends_with(s9, 'd') as ends_with_result from table_a;

--15. concat：CONCAT 函数将联接两个表达式并返回生成的表达式
-15.1 不支持的使用方式以及不支持的数据类型（INT32 | INT64 | FLOAT | DOUBLE | BOOLEAN | DATE | TIMESTAMP | BLOB）进行验证
select concat() from table_a; <<SQLSTATE;
select concat(s1,s2) from table_a; <<SQLSTATE;
select concat(s1,s3) from table_a; <<SQLSTATE;
select concat(s1,s4) from table_a; <<SQLSTATE;
select concat(s1,s5) from table_a; <<SQLSTATE;
select concat(s1,s6) from table_a; <<SQLSTATE;
select concat(s1,s7) from table_a; <<SQLSTATE;
select concat(s1,s8) from table_a; <<SQLSTATE;
select concat(s1,s10) from table_a; <<SQLSTATE;
--15.2 支持的数据类型（TEXT | STRING）
select device_id, color, concat(device_id, color) as concat_result from table_a;
select s1, s9, concat(s1, s9) as concat_result from table_a;
select s1,s9,concat(s1 || s9) from table_a; <<SQLSTATE;
select s1, s9, device_id, color, concat(s1 || s9, device_id || color) as concat_result from table_a;

--16. strcmp
-16.1 不支持的使用方式以及不支持的数据类型（INT32 | INT64 | FLOAT | DOUBLE | BOOLEAN | DATE | TIMESTAMP | BLOB）进行验证
select strcmp() from table_a; <<SQLSTATE;
select strcmp(s1,s2) from table_a; <<SQLSTATE;
select strcmp(s1,s3) from table_a; <<SQLSTATE;
select strcmp(s1,s4) from table_a; <<SQLSTATE;
select strcmp(s1,s5) from table_a; <<SQLSTATE;
select strcmp(s1,s6) from table_a; <<SQLSTATE;
select strcmp(s1,s7) from table_a; <<SQLSTATE;
select strcmp(s1,s8) from table_a; <<SQLSTATE;
select strcmp(s1,s10) from table_a; <<SQLSTATE;
select device_id,s1,s9, strcmp(s9,s1,device_id) from table_a; <<SQLSTATE;
--16.2 支持的数据类型（TEXT | STRING）
select s1, s9, strcmp(s1,s9) as strcmp_result from table_a;
select device_id, color, strcmp(device_id,color) as strcmp_result from table_a;
select device_id,s1, strcmp(device_id,s1) as strcmp_result from table_a;
select s9,s1, strcmp(s9,s1) as strcmp_result from table_a;
select s9,color,strcmp(s9,color) as strcmp_result from table_a;

--17. 数据清理：删除数据库
drop database test_db;
<<NULL
